{{ header -}}
package packets

// Payload represents a LIFX packet payload that can be serialized and deserialized.
type Payload interface {
	// MarshalBinary encodes the payload into its binary representation.
	MarshalBinary() ([]byte, error)

	// UnmarshalBinary decodes the binary data into the payload struct.
	UnmarshalBinary([]byte) error

	// PayloadType returns the packet type associated with this payload.
	PayloadType() uint16

	// Size returns the size of the message.
	Size() int
}

type payloadType uint16

const (
    {{- range $packet := . }}
    PayloadType{{ $packet.Name }} payloadType = {{ $packet.PktType }}
    {{- end }}
)

var Payloads = map[uint16]func() Payload{
{{- range $packet := . }}
    {{ $packet.PktType }}: func() Payload { return &{{ $packet.Name }}{} },
{{- end }}
}
